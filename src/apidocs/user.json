{
  "openapi": "3.0.3",
  "info": {
      "title": "API Documentation User - OpenAPI 3.0",
      "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
          "email": "apiteam@swagger.io"
      },
      "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.11"
  },
  "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
  },
  "servers": [
      {
          "url": "http://localhost:3000/api/user"
      }
  ],
  "tags": [
      {
          "name": "user",
          "description": "Operations about user"
      }
  ],
  "paths": {
      "/login": {
          "post": {
              "tags": [
                  "user"
              ],
              "summary": "Logs user into the system",
              "description": "",
              "operationId": "loginUser",
              "requestBody": {
                  "description": "Login user object",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Login"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "$ref": "#/components/responses/loginResponse"
                  },
                  "400": {
                      "description": "Invalid username/password supplied",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "message": {
                                          "type": "string",
                                          "example": "Invalid username/password supplied"
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "Wrong Password",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "message": {
                                          "type": "string",
                                          "example": "Wrong Password"
                                      }
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "User Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "message": {
                                          "type": "string",
                                          "example": "User not found"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/register": {
          "post": {
              "tags": [
                  "user"
              ],
              "summary": "Register user into the system",
              "description": "",
              "operationId": "registerUser",
              "requestBody": {
                  "description": "Register User Object",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Register"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "$ref": "#/components/responses/registerResponse"
                  },
                  "403": {
                      "description": "User already registered",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "message": {
                                          "type": "string",
                                          "example": "Email already registered"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/profile": {
          "get": {
              "tags": [
                  "user"
              ],
              "summary": "Profile",
              "description": "Get profile",
              "operationId": "profileUser",
              "responses": {
                  "200": {
                      "description": "Successful operation",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/User"
                              }
                          }
                      }
                  },
                  "401": {
                      "$ref": "#/components/responses/Unauthorized"
                  }
              },
              "security": [
                  {
                      "bearerAuth": []
                  }
              ]
          }
      }
  },
  "components": {
      "schemas": {
          "Login": {
              "type": "object",
              "properties": {
                  "email": {
                      "type": "string",
                      "example": "user@user.com"
                  },
                  "password": {
                      "type": "string",
                      "example": "user123"
                  }
              }
          },
          "Register": {
              "type": "object",
              "properties": {
                  "username": {
                      "type": "string",
                      "example": "jhonywardo"
                  },
                  "email": {
                      "type": "string",
                      "example": "jhonywardo@user.com"
                  },
                  "firstName": {
                      "type": "string",
                      "example": "Jhony"
                  },
                  "lastName": {
                      "type": "string",
                      "example": "Wardo"
                  },
                  "password": {
                      "type": "string",
                      "example": "password"
                  }
              }
          },
          "User": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                  },
                  "username": {
                      "type": "string",
                      "example": "user"
                  },
                  "email": {
                      "type": "string",
                      "example": "user@user.com"
                  },
                  "firstName": {
                      "type": "string",
                      "example": "John"
                  },
                  "lastName": {
                      "type": "string",
                      "example": "Doe"
                  },
                  "password": {
                      "type": "string",
                      "example": "user123"
                  },
                  "age": {
                      "type": "integer",
                      "example": 35
                  }
              },
              "xml": {
                  "name": "user"
              }
          }
      },
      "requestBodies": {
          "User": {
              "description": "User object that needs to be added to the System",
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/Register"
                      }
                  }
              }
          }
      },
      "responses": {
          "loginResponse": {
              "description": "Successful operation",
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string",
                                  "example": "Success"
                              },
                              "data": {
                                  "type": "object",
                                  "example": {
                                      "time": "Mon Dec 11 2023 14:43:31 GMT+0700 (Indochina Time)",
                                      "username": "user",
                                      "email": "user@user.com",
                                      "firstName": "John",
                                      "lastName": "Doe",
                                      "age": 35
                                  }
                              },
                              "token": {
                                  "type": "string",
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiTW9uIERlYyAxMSAyMDIzIDE0OjQzOjMxIEdNVCswNzAwIChJbmRvY2hpbmEgVGltZSkiLCJ1c2VybmFtZSI6InVzZXIiLCJlbWFpbCI6InVzZXJAdXNlci5jb20iLCJmTmFtZSI6IkpvaG4iLCJsTmFtZSI6IkRvZSIsImFnZSI6bnVsbCwiaWF0IjoxNzAyMjgwNjEyLCJleHAiOjE3MDIyODQyMTJ9.VGNBDXSFrvFRbEtRDj1lwAnHituwg-bnYc4LTD5NIGg"
                              }
                          }
                      }
                  }
              }
          },
          "registerResponse": {
              "description": "Successful operation",
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string",
                                  "example": "Registration successful"
                              },
                              "data": {
                                  "type": "object",
                                  "example": {
                                      "id": 1,
                                      "username": "jhonywardo",
                                      "email": "jhonywardo@user.com",
                                      "password": "user123",
                                      "firstName": "Jhony",
                                      "lastName": "Wardo",
                                      "age": null
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "Unauthorized": {
              "description": "Invalid authorization",
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string",
                                  "example": "Invalid authorization"
                              }
                          }
                      }
                  }
              }
          }
      },
      "securitySchemes": {
          "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
          }
      }
  }
}